name: üîí Production Build & Deploy
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

concurrency:
  group: production-${{ github.ref }}
  cancel-in-progress: true

jobs:
  security-scan:
    name: 'üîç Security Scan'
    runs-on: ubuntu-latest
    permissions:
      security-events: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install production dependencies
        run: |
          npm install --production --package-lock-only package.prod.json
          npm ci --production

      - name: Security Audit (Production)
        run: |
          if npm audit --audit-level=high; then
            echo "‚úÖ Production dependencies secure"
          else
            echo "üö® Production security violation!"
            exit 1
          fi

      - name: OWASP Dependency Check
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: 'Mi-Rosarita-AI-App'
          path: '.'
          format: 'ALL'
          args: >
            --enableRetired
            --enableExperimental
            --nvdValidForHours 24

      - name: Upload security results
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: reports/dependency-check-report.sarif

  build-and-test:
    name: 'üèóÔ∏è Build & Test'
    needs: security-scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --production package.prod.json

      - name: Run production build
        run: ./scripts/build-prod.sh

      - name: Run security audit script
        run: ./scripts/security-audit.sh

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: production-build
          path: dist/

  deploy:
    name: 'üöÄ Deploy'
    needs: [security-scan, build-and-test]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: production-build
          path: dist/

      - name: Setup Firebase CLI
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT }}'
          channelId: live
          projectId: mi-rosarita-ai-app